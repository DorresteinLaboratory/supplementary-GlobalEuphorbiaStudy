xlab("")+
ylab("Bray-Curtis chemical similarity") +
#geom_point(size=3,color=df_cols)  +
geom_point(size=0.5,color='black',shape=8)   +
scale_y_continuous(limits = c(0, 1.2)) +
theme_light()
p
dev.off()
pdf("/Users/madeleineernst/Documents/PostDoc/Mauricio/ChemicalSimilarity/BrayCurtis_Tukey.pdf",width=4,height=7, bg="transparent")
p <- ggplot(df_t,aes(x=df_n,y=df))+
#geom_boxplot(color=cols,fill=NA) +
geom_boxplot(color='black',fill=cols) +
geom_text(data = generate_label_df(tHSD, 'df_n'), aes(x = plot.labels, y = V1, label = labels))+
annotate("text", x = c(1,2,3,4), y=0, label = paste("n=", lengths(bray_sim)[-4],sep=""),size=3) +
xlab("")+
ylab("Bray-Curtis chemical similarity") +
#geom_point(size=3,color=df_cols)  +
geom_point(size=0.3,color='black',shape=3)   +
scale_y_continuous(limits = c(0, 1.2)) +
theme_light()
p
dev.off()
pdf("/Users/madeleineernst/Documents/PostDoc/Mauricio/ChemicalSimilarity/BrayCurtis_Tukey.pdf",width=4,height=7, bg="transparent")
p <- ggplot(df_t,aes(x=df_n,y=df))+
#geom_boxplot(color=cols,fill=NA) +
geom_boxplot(color='black',fill=cols) +
geom_text(data = generate_label_df(tHSD, 'df_n'), aes(x = plot.labels, y = V1, label = labels))+
annotate("text", x = c(1,2,3,4), y=0, label = paste("n=", lengths(bray_sim)[-4],sep=""),size=3) +
xlab("")+
ylab("Bray-Curtis chemical similarity") +
#geom_point(size=0.3,color='black',shape=3)   +
scale_y_continuous(limits = c(0, 1.2)) +
theme_light()
p
dev.off()
?cor.test
original <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/ProteoSAFe-METABOLOMICS-SNETS-806fa2cd-download_cytoscape_data_Preprocessed/clusterinfosummarygroup_attributes_withIDs_withcomponentID/51d12c22a09a42269796cbf295b08cdf.tsv",sep='\t')
dim(original)
original[1:4,1:5]
chunk1 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-a1c0ebb9-summary_report_chunk1/final_out/node_attributes_table.tsv")
chunk2 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-4844738f-summary_report_chunk2/final_out/node_attributes_table.tsv")
chunk1 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-a1c0ebb9-summary_report_chunk1/final_out/node_attributes_table.tsv",sep='\t')
chunk2 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-4844738f-summary_report_chunk2/final_out/node_attributes_table.tsv",sep='\t')
chunk3 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-232cf5a8-summary_report_chunk3/final_out/node_attributes_table.tsv",sep='\t')
head(chunk1)
head(chunk2)
head(chunk3)
original[1:5,1:5]
colnames(original)
original$comb <- paste(original$parent.mass,original$RTMean,sep="_")
head(chunk1)
chunk1$comb <- paste(chunk1$parent.mass,chunk1$RTMean,sep="_")
chunk1$comb
original$comb
which(chunk1$comb %in% original$comb)
dim(chunk1[which(chunk1$comb %in% original$comb),])
chunk3$comb <- paste(chunk3$parent.mass,chunk3$RTMean,sep="_")
dim(chunk2[which(chunk2$comb %in% original$comb),])
chunk2$comb <- paste(chunk2$parent.mass,chunk2$RTMean,sep="_")
chunk3$comb <- paste(chunk3$parent.mass,chunk3$RTMean,sep="_")
dim(chunk2[which(chunk2$comb %in% original$comb),])
dim(chunk3[which(chunk3$comb %in% original$comb),])
?match
match(chunk1$comb,original$comb)
chunk1$comb[1]
original$comb$comb[12461]
original$comb[12461]
colnames(chunk1)
colnames(chunk2)
chunks <- rbind(chunk1,chunk2,chunk3)
7688+7715+7696
original <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/ProteoSAFe-METABOLOMICS-SNETS-806fa2cd-download_cytoscape_data_Preprocessed/clusterinfosummarygroup_attributes_withIDs_withcomponentID/51d12c22a09a42269796cbf295b08cdf.tsv",sep='\t')
chunk1 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-a1c0ebb9-summary_report_chunk1/final_out/node_attributes_table.tsv",sep='\t')
chunk2 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-4844738f-summary_report_chunk2/final_out/node_attributes_table.tsv",sep='\t')
chunk3 <- read.csv("/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/ProteoSAFe-NAP_CCMS2-232cf5a8-summary_report_chunk3/final_out/node_attributes_table.tsv",sep='\t')
chunks <- rbind(chunk1,chunk2,chunk3)
original$comb <- paste(original$parent.mass,original$RTMean,sep="_")
chunks$comb <- paste(chunks$parent.mass,chunks$RTMean,sep="_")
dim(chunks[which(chunks$comb %in% original$comb),])
NAPchunks <- merge(original, chunks, by="comb")
dim(NAPchunks)
dim(chunks)
dim(original)
26978+23099
44+25
20+25
NAPchunks[1:5,1:5]
colnames(NAPchunks)
NAPchunks[1:5,c(1:7,25:30)]
NAPchunks[1:5,c(1:12,25:30)]
colnames(NAPchunks)
NAPchunks[1:5,c(1:17,25:30)]
NAPchunks[300:305,c(1:17,25:30)]
which(colnames(NAPchunks)=="cluster.index.x")
ordcols <- c(which(colnames(NAPchunks)=="cluster.index.x"), which(colnames(NAPchunks)!="cluster.index.x"))
ordcols
NAPchunks <- NAPchunks[,ordcols]
NAPchunks[1:5,1:5]
write.csv(NAPchunks,"/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/NAPbileacids.tsv",sep="\t")
write.table(NAPchunks,"/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/NAPbileacids.csv",sep="\t")
write.table(NAPchunks,"/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/NAPbileacids.csv",sep="\t",quote=F)
write.table(NAPchunks,"/Users/madeleineernst/Documents/PostDoc/Asker/SplitNetwork/NAPbileacids.tsv",sep="\t",quote=F, row.names = F)
library(caper)
?pyhlo.d
?pyhlo.D
?pyhlod
?cor.test
?pheatmap
library(pheatmap)
?pheatmap
library(caper)
citation(caper)
citation("caper")
test <- read.csv("/Users/madeleineernst/Downloads/Euphrasia\ copy.csv",sep=";")
head(test)
athymalus <- read.csv("/Users/madeleineernst/Documents/PostDoc/NaturePlants/GBIFData/Athymalus_0003633-171219132708484.csv", sep="\t",stringsAsFactors = F,quote="")
head("athymalus")
head(athymalus)
athymalus$decimallatitude
test <- read.csv("/Users/madeleineernst/Documents/PostDoc/NaturePlants/Science/SI/Github/3DMolecularCartography/Cytoscape_SummaryTable_3DMolecularCartography.csv")
colnames(test)
unique(test$componentindex)
length(unique(test$componentindex))
unique(test$CF_subclass)
length(which(is.na(test$CF_subclass)))
5335-3306
colnames(test)
test$Diterpenoid_Subclass_Interpretation
unique(Diterpenoid_Subclass_Interpretation)
unique(test$Diterpenoid_Subclass_Interpretation)
dist <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/NamedDistanceMatrix_20_20_new.txt")
dist[1:5,1:5]
dist <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/NamedDistanceMatrix_20_20_new.txt",sep="\t")
dist[1:5,1:5]
CmdScale <- cmdscale(dist, k =3)
?cmdscale
dist <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/NamedDistanceMatrix_20_20_new.txt",sep="\t",row.names = 1)
dist[1:5,1:5]
CmdScale <- cmdscale(dist, k =3)
CmdScale
# plot solution
x <- CmdScale$points[,1]
y <- CmdScale$points[,2]
CmdScale
CmdScale$points
CmdScale[,1]
# plot solution
x <- CmdScale[,1]
y <- CmdScale[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric	MDS",	type="n")
text(x, y, labels = row.names(mydata), cex=.7)
x
y
text(x, y, labels = row.names(dist), cex=.7)
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric	MDS")
x
# plot solution
x <- log(CmdScale[,1])
y <- log(CmdScale[,2])
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric	MDS")
# plot solution
x <- log(CmdScale[,1]+1)
y <- log(CmdScale[,2]+1)
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric	MDS")
CmdScale[,1]
log(CmdScale[,1])
log(-8.827248e-07  )
dist_t <- t(dist)
dsti[1:5,1:5]
dist_t[1:5,1:5]
ft <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/featuretable_red20_20_new.txt",sep="\t",row.names = 1)
ft <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/featuretable_red20_20_new.tsv",sep="\t",row.names = 1)
ftt <- t(ft)
ftt[1:5,1;5]
ftt[1:5,1:5]
ftt <- cbind(colnames(ftt),ftt)
ftt <- t(ft)
ftt <- cbind(rownames(ftt),ftt)
ftt[1:5,1:5]
write.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp.csv",quote=F,rownames=F)
write.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp.csv",quote=F,row.names =F)
write.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp.csv",quote=F,row.names =F)
write.csv(ftt,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp.csv",quote=F,row.names =F)
gnps <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/N_A_filtered_results.tsv")
gnps <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/N_A_filtered_results.tsv",sep="\t")
?read.csv
dim(gnps)
gnps <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/N_A_filtered_results.tsv",sep="\t",header=FALSE, comment.char="#",
na.strings=".", stringsAsFactors=FALSE,
quote="", fill=FALSE)
gnps <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/N_A_filtered_results.tsv",sep="\t",header=FALSE, comment.char="#",
na.strings="\r", stringsAsFactors=FALSE,
quote="", fill=FALSE)
gnps <- read.csv("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/N_A_filtered_results.tsv",sep="\t",header=FALSE, comment.char="\r",
na.strings=".", stringsAsFactors=FALSE,
quote="", fill=FALSE)
gnps <- read.delim("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/N_A_filtered_results.tsv",sep="\t")
dim(gnps)
gnps <- read.delim("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/MappingFile.txt",sep="\t")
gnps[1:5,1:5]
ftt[1:5,1:5]
which(gnps$X.SampleID %in% rownames(ftt))
which(gnps$X.SampleID %in% ftt[,1])
which(as.character(gnps$X.SampleID) %in% ftt[,1])
as.character(gnps$X.SampleID)
ftt[,1]
ftt[1:5,1:5]
gnps$X.SampleID <- gsub(".","_",gnps$X.SampleID)
which(gnps$X.SampleID %in% ftt[,1])
gnps$X.SampleID
gnps <- read.delim("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/MappingFile.txt",sep="\t")
gnps$X.SampleID <- gsub("[.]","_",gnps$X.SampleID)
which(gnps$X.SampleID %in% ftt[,1])
length(which(gnps$X.SampleID %in% ftt[,1]))
colnames(ftt)[1] <- "X.SampleID"
gnps <- read.delim("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/MappingFile.txt",sep="\t")
gnps$X.SampleID <- gsub("[.]","_",gnps$X.SampleID)
which(ftt$X.SampleID %in% gnps$X.SampleID)
is(ftt)
ftt <- as.data.frame(ftt)
ftt[1:5,1:5]
which(ftt$X.SampleID %in% gnps$X.SampleID)
comb <- merge(gnps,ftt,by="X.SampleID")
dim(comb)
dim(ftt)
dim(gnps)
comb[1:5,1:5]
dim(gnps)
head(gnps)
gnps <- read.delim("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/MappingFile.txt",sep="\t")
dim(gnps)
gnps <- read.delim("/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/MappingFile.txt",sep="\t")
gnps$X.SampleID <- gsub("[.]","_",gnps$X.SampleID)
comb <- merge(gnps,ftt,by="X.SampleID")
dim(gnps)
dim(comb)
dim(ftt)
2689+50
comb[1:5,1:6]
comb[1:5,1:50]
comb[1:5,1:51]
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
colnames(comb)
colnames(gnps)
sel <- c("X.SampleID","dataset","user_id","title","dataset_id","species","species_resolved","instrument","instrument_resolved")
comb <- merge(gnps[,which(colnames(gnps)%in% sel)],ftt,by="X.SampleID")
dim(comb)
comb[1:5,1:5]
comb[1:5,1:10]
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
gnps$species
gnps$species_resolved
gnps$instrument
sel <- c("X.SampleID","dataset","user_id","title","dataset_id","instrument","instrument_resolved") #"species","species_resolved",
comb <- merge(gnps[,which(colnames(gnps)%in% sel)],ftt,by="X.SampleID")
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
sel <- c("X.SampleID","dataset") #"species","species_resolved","user_id","title","dataset_id","instrument","instrument_resolved"
comb <- merge(gnps[,which(colnames(gnps)%in% sel)],ftt,by="X.SampleID")
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
sel <- c("X.SampleID","dataset","species") #"species","species_resolved","user_id","title","dataset_id","instrument","instrument_resolved"
comb <- merge(gnps[,which(colnames(gnps)%in% sel)],ftt,by="X.SampleID")
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
gnps$species
str_replace_all(gnps$species, "[^[:alnum:]]", "_")
# create file for input into ClusterApp
# http://137.110.133.15:3838/clusterMetaboApp0.9.1/
library(stringr)
str_replace_all(gnps$species, "[^[:alnum:]]", "_")
gnps$species <- str_replace_all(gnps$species, "[^[:alnum:]]", "_")
sel <- c("X.SampleID","dataset","species") #"species","species_resolved","user_id","title","dataset_id","instrument","instrument_resolved"
comb <- merge(gnps[,which(colnames(gnps)%in% sel)],ftt,by="X.SampleID")
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
gnps$species_resolved <- str_replace_all(gnps$species_resolved, "[^[:alnum:]]", "_")
gnps$species_resolved
unique(gnps$species_resolved)
sel <- c("X.SampleID","dataset","species","species_resolved") #"species","species_resolved","user_id","title","dataset_id","instrument","instrument_resolved"
comb <- merge(gnps[,which(colnames(gnps)%in% sel)],ftt,by="X.SampleID")
write.csv(comb,"/Users/madeleineernst/Documents/PostDoc/GNPS_SPACE/GNPS_All/Featuretabel_ClusterApp_Metadata.csv",quote=F,row.names =F)
## load library
library(pheatmap)
setwd("/Users/madeleineernst/Documents/PostDoc/NaturePlants/Science/SI/Github/3DMolecularCartography")
## read mass spectral molecular network data
net <-read.csv("Cytoscape_SummaryTable_3DMolecularCartography.csv", sep=",", dec=".",header = TRUE) # Table exported from Cytoscape, with all network attributes loaded
net[1:5,1:5]
IDs <- paste(round(net$row.m.z,4),round(net$row.retention.time,4),paste("ID",net$shared.name,sep=".."),sep="_")
net <- cbind(IDs, net)
# filter out only feature IDs annotated as diterpenoids
c1 <- which(colnames(net) %in% c("LibraryID","IDs","componentindex","Diterpenoid_Subclass_Interpretation"))
c2 <- grep("Peak.area",colnames(net))
net <- net[,c(c1,c2)]
dit <- c("DSF 313, 295, 285 Euphorbia diterpenoid",
"DSF 313, 295, Euphorbia diterpenoid",
"DSF 317, 299, 291, 281 Euphorbia diterpenoid",
"DSF 329, 311, 293, 283 - Euphorbia diterpenoid",
"DSF 337, 313, 295, 277, 267 Euphorbia diterpenoid",
"Euphorbia factor L14 - Lathyrane diterpenoid",
"Euphorbia factor L8 - Lathyrane diterpenoid - likely",
"Ingenol O-Decadienoyl, O-Ac or isomer putative",
"Miliiamin C derivative",
"Miliiamin C new derivative",
"Miliiamine C 20-Ac, (or positional isomer)",
"Miliiamine C 20-Ac, N-de-Me - Ingenol diterpenoid",
"Milliamine C; 5-Anthraniloyl type moiety, 20-Ac - Ingenol diterpenoid",
"m/z 295 of diterpene esters (collected from 12-deoxyphorbol-13-acetate)",
"m/z 313 of diterpene esters (collected from 12-deoxyphorbol-13-acetate)")
net <- net[net$LibraryID %in% dit | net$Diterpenoid_Subclass_Interpretation =="Euphorbia diterpenoids",]
ClApp <- net
# transpose and order to plot heatmap
ClApp <- t(ClApp)
colnames(ClApp) <- ClApp[1,]
ClApp <- ClApp[-c(1:4),]
class(ClApp) <- "numeric"
# are there any 0 columns?
which(colSums(ClApp)==0)
rownames(ClApp)
hirta <- grep("hirta",rownames(ClApp))
horrida <- grep("horrida",rownames(ClApp))
lathyris <- grep("lathyris",rownames(ClApp))
milii <- grep("milii",rownames(ClApp))
hirta
rownames(ClApp)[hirta]
sort(rownames(ClApp)[hirta])
order(rownames(ClApp)[hirta])
gsub(".*_","",rownames(ClApp)[hirta])
sub(".*?_(.+)", "\\1", rownames(ClApp)[hirta])
sort(sub(".*?_(.+)", "\\1", rownames(ClApp)[hirta]))
# hirta
h1 <- grep("leaves",rownames(ClApp)[hirta])
h2 <- grep("youngleaves",rownames(ClApp)[hirta])
h3 <- grep("stem",rownames(ClApp)[hirta])
h4 <- grep("fruit",rownames(ClApp)[hirta])
h5 <- grep("fruitextra",rownames(ClApp)[hirta])
h6 <- grep("innerroot",rownames(ClApp)[hirta])
h7 <- grep("outerroot",rownames(ClApp)[hirta])
h1
rownames(ClApp)[hirta][c(h1,h2,h3,h4,h5,h6,h7)]
sub(".*?_(.+)", "\\1", rownames(ClApp)[hirta])
strsplit(rownames(ClApp))
strsplit(rownames(ClApp),"_")
l <- strsplit(rownames(ClApp),"_")
sapply(l, "[[", 2)
sapply(l, "[[", c(2,3))
sapply(l, "[[", 3)
rownames(ClApp)[100]
rownames(ClApp)[101]
rownames(ClApp)[103]
newr <- paste(sapply(l, "[[", 2),sapply(l, "[[", 3),sep="")
newr
newr <- paste(sapply(l, "[[", 2),sapply(l, "[[", 3),sep="_")
newr
head(newr)
head(rownames(ClApp))
rownames(ClApp) <- newr
hirta <- grep("hirta",rownames(ClApp))
horrida <- grep("horrida",rownames(ClApp))
lathyris <- grep("lathyris",rownames(ClApp))
milii <- grep("milii",rownames(ClApp))
# hirta
h1 <- grep("leaves",rownames(ClApp)[hirta])
h2 <- grep("youngleaves",rownames(ClApp)[hirta])
h3 <- grep("stem",rownames(ClApp)[hirta])
h4 <- grep("fruit",rownames(ClApp)[hirta])
h5 <- grep("fruitextra",rownames(ClApp)[hirta])
h6 <- grep("innerroot",rownames(ClApp)[hirta])
h7 <- grep("outerroot",rownames(ClApp)[hirta])
rownames(Clapp)[hirta][c(h1,h2,h3,h4,h5,h6,h7)]
rownames(ClApp)[hirta][c(h1,h2,h3,h4,h5,h6,h7)]
sort(rownames(ClApp)[hirta][c(h1,h2,h3,h4,h5,h6,h7)])
grep("fruitextra",rownames(ClApp))
# hirta
h1 <- grep("leaves",rownames(ClApp)[hirta])
h2 <- grep("youngleaves",rownames(ClApp)[hirta])
h3 <- grep("stem",rownames(ClApp)[hirta])
h4 <- grep("fruit",rownames(ClApp)[hirta])
h5 <- grep("innerroot",rownames(ClApp)[hirta])
h6 <- grep("outerroot",rownames(ClApp)[hirta])
sort(rownames(ClApp)[hirta][c(h1,h2,h3,h4,h5,h6)])
# hirta
h1 <- grep("leaves",rownames(ClApp)[hirta])
h2 <- grep("stem",rownames(ClApp)[hirta])
h3 <- grep("fruit",rownames(ClApp)[hirta])
h4 <- grep("innerroot",rownames(ClApp)[hirta])
h5 <- grep("outerroot",rownames(ClApp)[hirta])
sort(rownames(ClApp)[hirta][c(h1,h2,h3,h4,h5)])
rownames(ClApp)[hirta][c(h1,h2,h3,h4,h5)]
# horrida
ho1 <- grep("pool",rownames(ClApp)[horrida])
ho2 <- grep("spines",rownames(ClApp)[horrida])
ho3 <- grep("flowers",rownames(ClApp)[horrida])
ho4 <- grep("fruits",rownames(ClApp)[horrida])
ho5 <- grep("roots",rownames(ClApp)[horrida])
ho6 <- grep("innerroot",rownames(ClApp)[horrida])
ho7 <- grep("outerroot",rownames(ClApp)[horrida])
rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5,ho6,ho7)]
# horrida
ho1 <- grep("pool",rownames(ClApp)[horrida])
ho2 <- grep("spines",rownames(ClApp)[horrida])
ho3 <- grep("flowers",rownames(ClApp)[horrida])
ho4 <- grep("fruits",rownames(ClApp)[horrida])
ho5 <- grep("root",rownames(ClApp)[horrida])
rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)]
sort(rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)])
grep("M2", sort(rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)]))
sort(rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)])[grep("M2", sort(rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)]))]
sort(rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)])[grep("M1", sort(rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)]))]
ClApp <- net
# transpose and order to plot heatmap
ClApp <- t(ClApp)
colnames(ClApp) <- ClApp[1,]
ClApp <- ClApp[-c(1:4),]
class(ClApp) <- "numeric"
# are there any 0 columns?
which(colSums(ClApp)==0)
rownames(ClApp)[rownames(ClApp)=="135_Z1bfruits_horridaM1_P1.C.6_01_36459.mzXML"]
rownames(ClApp)
rownames(ClApp)[rownames(ClApp)=="X135_Z1bfruits_horridaM1_P1.C.6_01_36459.mzXML"]   <- "135_Z2apool_horridaM1"
rownames(ClApp)
ClApp <- net
# transpose and order to plot heatmap
ClApp <- t(ClApp)
colnames(ClApp) <- ClApp[1,]
ClApp <- ClApp[-c(1:4),]
class(ClApp) <- "numeric"
# are there any 0 columns?
which(colSums(ClApp)==0)
rownames(ClApp)[rownames(ClApp)=="X135_Z1bfruits_horridaM1_P1.C.6_01_36459.mzXML"]
rownames(ClApp)
# subsitute wrong columnname
rownames(ClApp)[rownames(ClApp)=="X135_Z1bfruits_horridaM1_P1.C.6_01_36459.mzML.Peak.area"]   <- "X135_Z2apool_horridaM1_P1.C.6_01_36459.mzML.Peak.area"
rownames(ClApp)
l <- strsplit(rownames(ClApp),"_")
newr <- paste(sapply(l, "[[", 2),sapply(l, "[[", 3),sep="_")
rownames(ClApp) <- newr
rownames(ClApp)
hirta <- grep("hirta",rownames(ClApp))
horrida <- grep("horrida",rownames(ClApp))
lathyris <- grep("lathyris",rownames(ClApp))
milii <- grep("milii",rownames(ClApp))
# hirta
h1 <- grep("leaves",rownames(ClApp)[hirta])
h2 <- grep("stem",rownames(ClApp)[hirta])
h3 <- grep("fruit",rownames(ClApp)[hirta])
h4 <- grep("innerroot",rownames(ClApp)[hirta])
h5 <- grep("outerroot",rownames(ClApp)[hirta])
# horrida
ho1 <- grep("pool",rownames(ClApp)[horrida])
ho2 <- grep("spines",rownames(ClApp)[horrida])
ho3 <- grep("flowers",rownames(ClApp)[horrida])
ho4 <- grep("fruits",rownames(ClApp)[horrida])
ho5 <- grep("root",rownames(ClApp)[horrida])
rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)]
rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)][grep("M1",rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)])]
rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)][grep("M3",rownames(ClApp)[horrida][c(ho1,ho2,ho3,ho4,ho5)])]
# milii
m1 <- grep("leaves",rownames(ClApp)[milii])
m2 <- grep("stems",rownames(ClApp)[milii])
m3 <- grep("thorns",rownames(ClApp)[milii])
m4 <- grep("flowers",rownames(ClApp)[milii])
m5 <- grep("roots",rownames(ClApp)[milii])
rownames(ClApp)[lathyris][c(m1,m2,m3,m4,m5)]
# lathyris
l1 <- grep("leaves",rownames(ClApp)[lathyris])
l4 <- grep("stems",rownames(ClApp)[lathyris])
l8 <- grep("root",rownames(ClApp)[lathyris])
# lathyris
l1 <- grep("leaves",rownames(ClApp)[lathyris])
l2 <- grep("stems",rownames(ClApp)[lathyris])
l3 <- grep("root",rownames(ClApp)[lathyris])
rownames(ClApp)[lathyris][c(l1,l2,l3)]
rownames(ClApp)[lathyris][c(l1,l2,l3)][grep("M1",rownames(ClApp)[lathyris][c(l1,l2,l3)])]
sort(rownames(ClApp)[lathyris][c(l1,l2,l3)][grep("M1",rownames(ClApp)[lathyris][c(l1,l2,l3)])])
sort(rownames(ClApp)[lathyris][c(l1,l2,l3)][grep("M2",rownames(ClApp)[lathyris][c(l1,l2,l3)])])
# milii
m1 <- grep("leaves",rownames(ClApp)[milii])
m2 <- grep("stems",rownames(ClApp)[milii])
m3 <- grep("thorns",rownames(ClApp)[milii])
m4 <- grep("flowers",rownames(ClApp)[milii])
m5 <- grep("roots",rownames(ClApp)[milii])
rownames(ClApp)[milii][c(m1,m2,m3,m4,m5)]
sort(rownames(ClApp)[milii][c(m1,m2,m3,m4,m5)][grep("M1",rownames(ClApp)[lathyris][c(m1,m2,m3,m4,m5)])])
sort(rownames(ClApp)[milii][c(m1,m2,m3,m4,m5)][grep("M1",rownames(ClApp)[milii][c(m1,m2,m3,m4,m5)])])
sort(rownames(ClApp)[milii][c(m1,m2,m3,m4,m5)][grep("M2",rownames(ClApp)[milii][c(m1,m2,m3,m4,m5)])])
# sort rows per species
df <- ClApp[c(hirta[h1],hirta[h2],hirta[h3],hirta[h4],hirta[h5],
horrida[ho1],horrida[ho2],horrida[ho3],horrida[ho4],horrida[ho5]
lathyris[l1],lathyris[l2],lathyris[l3],
milii[m1],milii[m2],milii[m3],milii[m4],milii[m5]),]
# sort rows per species
df <- ClApp[c(hirta[h1],hirta[h2],hirta[h3],hirta[h4],hirta[h5],
horrida[ho1],horrida[ho2],horrida[ho3],horrida[ho4],horrida[ho5],
lathyris[l1],lathyris[l2],lathyris[l3],
milii[m1],milii[m2],milii[m3],milii[m4],milii[m5]),]
makeColorRampPalette <- function(colors, cutoff.fraction, num.colors.in.palette)
{
stopifnot(length(colors) == 4)
ramp1 <- colorRampPalette(colors[1:2])(num.colors.in.palette * cutoff.fraction)
ramp2 <- colorRampPalette(colors[3:4])(num.colors.in.palette * (1 - cutoff.fraction))
return(c(ramp1, ramp2))
}
cutoff.distance <- 0.001
cols <- makeColorRampPalette(c("#2C7BB6", "yellow",
"yellow", "red"),
cutoff.distance / max(df),ncol(df))
pdf("Heatmap_3DMolecularCartography_V2.pdf",width=8,height=5, bg="transparent")
pheatmap(df,  clustering_method="average", clustering_distance_cols="maximum",
show_colnames=TRUE,show_rownames=TRUE, cluster_rows=FALSE, cluster_cols=TRUE,
fontsize_row=2,fontsize_col=1,color=cols)
dev.off()
